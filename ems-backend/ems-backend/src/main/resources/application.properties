# Server Config
spring.application.name=ems-backend
server.port=8083


spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true



# MySQL Config, primary data source
spring.datasource.primary.url=jdbc:mysql://localhost:3306/etmsentity
spring.datasource.primary.username=root
spring.datasource.primary.password=123456
spring.datasource.primary.jdbc-url=${spring.datasource.primary.url}
#spring.datasource.primary.driver-class-name=com.mysql.cj.jdbc.Driver

# MySQL Config, secondary data source
spring.datasource.secondary.url=jdbc:mysql://localhost:3306/event-management
spring.datasource.secondary.username=root
spring.datasource.secondary.password=123456
spring.datasource.secondary.jdbc-url=${spring.datasource.secondary.url}
#spring.datasource.secondary.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA Config
# 1. When there is a mismatch of column in entity with the database
# Instead of add/dropping columns in the database, hibernate engine will warn
spring.jpa.properties.hibernate.hbm2ddl.auto=validate

# 2. Control the mapping rules between entity field and database field
# By default, even if you use @Column in the entity, the hibernate will look for
# the same entity field name in the database, which
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

#spring.jpa.properties.hibernate.


# Redis Config
spring.data.redis.host=localhost
spring.data.redis.port=6379


# JPA Config
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
# If there are any changes in the JPA entity, also reflect that change in the database
#spring.jpa.hibernate.ddl-auto=update


